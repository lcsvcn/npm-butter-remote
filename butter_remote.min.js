var butter_remote={lib:this,isConnected:!0,opt:{username:"popcorn",password:"popcorn",ip:"127.0.0.1",port:"8008",debug:!1},init:function(t,l){lib=this,t=lib.extend(lib.opt,t),lib.ping(l)},APIcall:function(t,l,e){request={},request.id=Math.floor(100*Math.random()+1),request.jsonrpc="2.0",request.method=t,request.params=l?l:[];var i=new XMLHttpRequest;i.open("POST","http://"+lib.opt.ip+":"+lib.opt.port,!0),i.setRequestHeader("Authorization",window.btoa(lib.opt.username+":"+lib.opt.password)),i.setRequestHeader("Accept","application/json;"),i.timeout=3e3,i.onreadystatechange=function(){4===this.readyState&&(4==this.readyState&&200==this.status?(data=JSON.parse(this.responseText),lib.handleData(data,t),e&&e(data)):(lib.log("Connection time out: can't reach butter. Try changing the settings."),lib.isConnected="false"))},i.send(JSON.stringify(request)),i=null},handleData:function(t,l){"ping"==l&&void 0!=t.error&&(lib.log("Invalid login: Check username and password."),lib.isConnected=!1),lib.log(t)},log:function(t){1==lib.opt.debug&&console.log(t)},extend:function(t){t=t||{};for(var l=1;l<arguments.length;l++)if(arguments[l])for(var e in arguments[l])arguments[l].hasOwnProperty(e)&&(t[e]=arguments[l][e]);return t},ping:function(t){lib.APIcall("ping",!1,t)},enter:function(){lib.APIcall("enter")},back:function(){lib.APIcall("back")},getviewstack:function(t){lib.APIcall("getviewstack",!1,t)},getgenres:function(t){lib.APIcall("getgenres",!1,t)},getsorters:function(t){lib.APIcall("getsorters",!1,t)},gettypes:function(t){lib.APIcall("gettypes",!1,t)},getcurrenttab:function(t){lib.APIcall("getcurrenttab",!1,t)},getfullscreen:function(t){lib.APIcall("getfullscreen",!1,t)},getplayers:function(t){lib.APIcall("getplayers",!1,t)},startstream:function(t){lib.APIcall("startstream",t)},setplayer:function(t){lib.APIcall("setplayer",t)},listennotifications:function(t){lib.APIcall("listennotifications",!1,t)},nextseason:function(){lib.APIcall("nextseason")},previousseason:function(){lib.APIcall("previousseason")},selectepisode:function(t){lib.APIcall("selectepisode",t)},togglequality:function(){lib.APIcall("togglequality")},watchtrailer:function(){lib.APIcall("watchtrailer")},getselection:function(t,l){"function"==typeof t&&(l=t,t=!1),lib.APIcall("getselection",t,l)},getcurrentlist:function(t,l){"function"==typeof t&&(l=t,t=!1),lib.APIcall("getcurrentlist",t,l)},getsubtitles:function(t){lib.APIcall("getsubtitles",!1,t)},togglemute:function(){lib.APIcall("togglemute")},togglefullscreen:function(){lib.APIcall("togglefullscreen")},toggleplaying:function(){lib.APIcall("toggleplaying")},volume:function(t,l){"function"==typeof t&&(l=t,t=!1),lib.APIcall("volume",t,l)},getplaying:function(t){lib.APIcall("getplaying",!1,t)},seek:function(t){lib.APIcall("seek",t)},subtitleoffset:function(t){lib.APIcall("subtitleoffset",t)},setsubtitle:function(t){lib.APIcall("setsubtitle",t)},getstreamurl:function(t){lib.APIcall("getstreamurl",!1,t)},toggletab:function(){lib.APIcall("toggletab")},showslist:function(){lib.APIcall("showslist")},animelist:function(){lib.APIcall("animelist")},movieslist:function(){lib.APIcall("movieslist")},showwatchlist:function(){lib.APIcall("showwatchlist")},showfavourites:function(){lib.APIcall("showfavourites")},showabout:function(){lib.APIcall("showabout")},showsettings:function(){lib.APIcall("showsettings")},togglewatched:function(){lib.APIcall("togglewatched")},togglefavourite:function(){lib.APIcall("togglefavourite")},clearsearch:function(){lib.APIcall("clearsearch")},filtergenre:function(t){lib.APIcall("filtergenre",t)},filtersorter:function(t){lib.APIcall("filtersorter",t)},filtertype:function(t){lib.APIcall("filtertype",t)},filtersearch:function(t){lib.APIcall("filtersearch",t)},setselection:function(t){lib.APIcall("setselection",t)},up:function(){lib.APIcall("up")},down:function(){lib.APIcall("down")},right:function(){lib.APIcall("right")},left:function(){lib.APIcall("left")}};